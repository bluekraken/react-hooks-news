import { useState, useEffect, useRef } from "react";
import Head from "next/head";
import Link from "next/link";
// import Image from "next/image";
import axios from "axios";

const HomePage = () => {
    const [results, setResults] = useState([]);
    const [query, setQuery] = useState("react hooks");
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);
    const searchInputRef = useRef();

    useEffect(() => {
        getData();
    }, []);

    const getData = async () => {
        setLoading(true);

        try {
            const response = await axios.get(`http://hn.algolia.com/api/v1/search?query=${query}`);
            setResults(response.data.hits);
        } catch (err) {
            setError(err);
        }

        setLoading(false);
    };

    const handleSubmit = (e) => {
        e.preventDefault();

        if (query) {
            getData();
        }
    };

    const handleClear = (e) => {
        setQuery("");
        searchInputRef.current.focus();
    };

    return (
        <div>
            <Head>
                <title>React Hooks News</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="container max-w-lg mx-auto p-4 m-2 bg-purple-100 shadow-lg rounded">
                <h1 className="text-gray-900 text-lg font-bold">Hooks News</h1>

                <form onSubmit={handleSubmit} className="mb-2">
                    <input
                        type="text"
                        value={query}
                        ref={searchInputRef}
                        onChange={(e) => setQuery(e.target.value)}
                        className="border p-1 rounded"
                    />
                    <button type="submit" className="bg-orange-400 rounded m-1 p-1">
                        Search
                    </button>
                    <button type="button" onClick={handleClear} className="bg-teal-500 text-white rounded m-1 p-1">
                        Clear
                    </button>
                </form>

                {loading ? (
                    <div className="text-orange-900 font-bold">Loading data...</div>
                ) : (
                    <ul className="list-reset leading-normal">
                        {results.map((result) => {
                            const { objectID, url, title } = result;

                            return (
                                <li key={objectID} className="underline text-indigo-700 hover:text-indigo-900">
                                    <Link href={url ? url : ""}>
                                        <a>{title}</a>
                                    </Link>
                                </li>
                            );
                        })}
                    </ul>
                )}

                {error && <div className="text-red-500 font-bold">{error.message}</div>}
            </main>
        </div>
    );
};

export default HomePage;
